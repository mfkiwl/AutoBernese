{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>As geodesists that use the Bernese GNSS Software [BSW] for different campaign types, we need a software system that automates the creation of campaigns, downloads necessary data, configures and starts BSW's processing engine [BPE], and, finally, assures the quality of and handles the end products that come out of the BPE process.</p>"},{"location":"#references","title":"References","text":"<ul> <li>Agency for Data Supply and Infrastructure</li> <li>Bernese GNSS Software</li> </ul>"},{"location":"bernese-setup/","title":"Bernese setup","text":"<p>Work in progress</p> <p>We are currently preparing the installation of Bernese GNSS Software version 5.4 [BSW].</p> <p>This page will eventuelly explain to the users how we have set up the server that runs the software.</p> <p>For now, here are the settings that we have set during installation.</p> <p>The settings below are apt to change until we have established a good working solution for BSW and the automation program.</p>"},{"location":"bernese-setup/#environments","title":"Environments","text":"<p>BSW is installed in three different locations used for different purposes focusing either on maintaining a durable production-ready [<code>prod</code>] installation and more brittle environments for trying out new things with the automation program [<code>dev</code>] and testing them [<code>test</code>], before they are made available in the production environment.</p> <code>[BSW_ENV]</code> Description Function Updated/rebuilt <code>prod</code> Production Used for actual work With new BSW updates <code>test</code> Test Used for testing new features With new BSW updates <code>dev</code> Development Wild west environment for developers. When need a new fresh installation <p>Each environment's paths are set in the following way parameterised byt the short-names defined for the different environments:</p> What Value Installation directory <code>/home/bsw/[BSW_ENV]/BERN54</code> DATAPOOL <code>/home/bsw/[BSW_ENV]/data/DATAPOOL</code> CAMPAIGN <code>/home/bsw/[BSW_ENV]/CAMPAIGN54</code> SAVEDISK <code>/home/bsw/[BSW_ENV]/SAVEDISK</code> User environment <code>$HOME/bsw/[BSW_ENV]/user</code> Temporary user environment <code>$HOME/bsw/[BSW_ENV]/temp</code>"},{"location":"bernese-setup/#setup-a-user-environment-for-bernese-gnss-software","title":"Setup a user environment for Bernese GNSS Software","text":"<p>A user of BSW needs a user environment consisting of two user-specific directories in the path established by the environment variables set in <code>LOADGPS.setvar</code> script. To create a new user environment, you need to <code>source</code> the file, run the configuration script and select the action that creates a new user environment. This is demonstrated below.</p> <p>A normal user should only need to create a user in what we have named the production environment. (See previous section for details.)</p> <p>Deviations from the default installation</p> <p>Between versions 5.2 and 5.4, the default names for the user environment directories have changed. However, we chose a different naming convention than the default one:</p> Directory 5.2 5.4 5.4 (our names) <code>basename($U)</code> <code>GPSUSER52</code> <code>GPSUSER</code> <code>user</code> <code>basename($T)</code> <code>GPSTEMP</code> <code>GPSWORK</code> <code>temp</code>"},{"location":"bernese-setup/#steps-to-create-environment","title":"Steps to create environment","text":"<p>On the server</p> <ul> <li> <p>Set environment variables for the current shell session</p> <pre><code>source /home/bsw/prod/BERN54/LOADGPS.setvar\n</code></pre> </li> <li> <p>Run the BSW configuration tool.</p> <pre><code>$EXE/configure.pm\n</code></pre> Output<pre><code>==========================================\nCONFIGURATION OF THE BERNESE GNSS SOFTWARE\n==========================================\n1 ... Update LOADGPS.setvar\n2 ... Install online updates\n3 ... Add a new user environment\n4 ... Compile the menu\n5 ... Compile the programs\n6 ... Install the example campaign\n7 ... Update / install Bernese license file\n8 ...   ---\n\nx ... Exit\n\nEnter option:\n</code></pre> </li> <li> <p>Choose option 3</p> Output<pre><code>Enter option: 3\n\nCreate user environment /home/&lt;user&gt;/bsw/user (y/n):\n</code></pre> </li> <li> <p>Say yes <code>y</code></p> Output<pre><code>Create user environment /home/&lt;user&gt;/bsw/user (y/n): y\n\nCopying menu and program input files...\nCopying BPE user scripts...\nCopying examples for process control files...\nCopying BPE options for processing examples...\nCopying ICONS ...\n### Archive of ICONS not found!\n\n**********************************************************************\n* User area /home/&lt;user&gt;/bsw/user\n* has been added/updated.\n**********************************************************************\n</code></pre> </li> </ul> <p>Despite the warning above, the environment is now created by creating the above directory as well as a temporary directory.</p> <p>Steps to delete an environment</p> <p>If you need to delete an environment, this can be done by simply deleting the directory <code>[BSW_ENV]</code> corresponding to the user environment, you want to get rid of:</p> <pre><code>rm -rf ~/bsw/[BSW_ENV]\n</code></pre>"},{"location":"bernese-setup/#initial-directory-content-for-a-new-user-environment","title":"Initial directory content for a new user environment","text":"<p>A newly-created user environment contains to directories <code>temp</code> and <code>user</code>. <code>temp</code> has no initial content, whereas <code>user</code> gets copies of content from source directories under the main directory of the BErnese installation path. The <code>user directory</code> is initialised with the following content:</p> <code>user/*</code> Initial content <code>OPT</code> Copied from <code>$C/USER</code> <code>OUT</code> Empty <code>PAN</code> Copied from <code>$C/SUPGUI</code> <code>PCF</code> Copied from <code>$C/USER</code> <code>SCRIPT</code> Copied from <code>$C/USER</code> <code>WORK</code> Empty"},{"location":"bernese-setup/#campaign-management","title":"Campaign management","text":""},{"location":"bernese-setup/#given-newly-created-campaign","title":"Given: Newly-created campaign","text":"<p>A newly-created campaign consists of a directory with an arbitrary name and an entry in the campaign menu <code>MENU_CMP.INP</code> panel file inside the Bernese installation directory.</p> <p>A new campaign directory has the following basic content:</p> <pre><code>.\n\u251c\u2500\u2500 ATM\n\u251c\u2500\u2500 BPE\n\u251c\u2500\u2500 GEN\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 OBSERV_COD.SEL\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 SESSIONS.SES\n\u251c\u2500\u2500 GRD\n\u251c\u2500\u2500 OBS\n\u251c\u2500\u2500 ORB\n\u251c\u2500\u2500 ORX\n\u251c\u2500\u2500 OUT\n\u251c\u2500\u2500 RAW\n\u251c\u2500\u2500 SOL\n\u2514\u2500\u2500 STA\n</code></pre>"},{"location":"bernese-setup/#given-possible-campaign-directory-paths","title":"Given: Possible campaign-directory paths","text":"<ul> <li> <p>Campaigns do not have to follow the given example [<code>${P}/EXAMPLE</code>] but may     be put in any desired directory, e.g.:</p> <pre><code>/home/&lt;some-user&gt;/my-campaigns/campaign\n</code></pre> <p>This means that our campaigns can and, probably, should, be ordered in sub directories by campaign type, e.g.:</p> <ul> <li><code>${P}/&lt;type-A&gt;/2222</code></li> <li><code>${P}/&lt;type-B&gt;/2222</code></li> <li>...</li> </ul> </li> </ul>"},{"location":"data-sources/","title":"Data sources","text":"<ul> <li>NASA Earth data</li> </ul>"},{"location":"developer/","title":"Developer","text":"<p>Documentation for our internal developers.</p>"},{"location":"developer/#development-environment-for-python","title":"Development environment for Python","text":"<p>We use MambaForge to create a development environment.</p> <p>With the mamba command, you can create the needed tools by building an environment from the environment-dev.yml file in the root of the Git archive.</p>"},{"location":"developer/#mambaforge","title":"MambaForge","text":"<p>The <code>mamba</code> official documentation recommends installing MambaForge rather than installing the <code>mamba</code> program with <code>conda</code>.</p> <p>On GitHub the following command for Linux/Unix installs the software:</p> <pre><code>curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh\"\nbash Mambaforge-$(uname)-$(uname -m).sh\n</code></pre>"},{"location":"developer/#documentation","title":"Documentation","text":"<p>The documentation is built using MkDocs with the Material extension. The lightbox feature is installed using PIP from the mamba environment.</p>"},{"location":"developer/#visualise-and-build-the-diagrams","title":"Visualise and Build the Diagrams","text":"<p>The architecture and overall functionality is viaualised using the C4-model tool Structurizr.</p> <p>A single workspace contains a collection of software systems, the main system's container and their components.</p> <p>The diagrams are produced using the docker container for Structurizr Lite, and the generated images are manually created from the web application accessing the workspace file.</p> <p>Command for running it in development:</p> <pre><code>docker run -d -it --rm -p 8080:8080 -v /path/to/git/AutoBernese/workspace/structurizr:/usr/local/structurizr structurizr/lite\n</code></pre> <p>For VS Code, there is a syntax extension called Structurizr DSL syntax highlighting from publisher ciarant that is useful, when editing the workspace file.</p> <p>Note</p> <p>Running the docker container above for the first in a directory which does not already have a <code>workspace.dsl</code> file, a new file is created with root ownership.</p> <p>In this case, change the permissions on the <code>workspace.dsl</code> to give yourself write permissions for the file.</p>"},{"location":"developer/#contribution-guidelines","title":"Contribution guidelines","text":"<p>Please run <code>black</code> (provided in the development conda environment) before pushing to GitHub, or else the lint check will fail.</p>"},{"location":"developer/#alternative-diagramming-tools","title":"Alternative diagramming tools:","text":"<ul> <li> <p>Ilograph has an online viewer, which may be used for free.</p> <p>Structurizr diagram can be converted to this with the CLI tool.</p> </li> </ul>"},{"location":"developer/#data","title":"Data","text":"<ul> <li>IGS switch to IGS20/igs20.atx and repro3 standards</li> <li> <p>IGS Site Log Manager User Guide | Empty sitelog</p> </li> <li> <p>Standards and data formats</p> </li> <li>Research group of Astronomy and GEomatics. gAGE</li> </ul>"},{"location":"system-overview/","title":"System overview","text":""},{"location":"system-overview/#system-context","title":"System context","text":""},{"location":"system-overview/#main-parts-of-the-software-containers","title":"Main parts of the software | Containers","text":""}]}